name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: php
jobs:

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    strategy:
      matrix:
        images:
          - "7.2/alpine/fpm"
          - "7.2/debian/fpm"
          - "7.3/alpine/fpm"
          - "7.3/debian/fpm"
          - "7.4/alpine/fpm"
          - "7.4/debian/fpm"

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - uses: satackey/action-docker-layer-caching@v0.0.8
        continue-on-error: true

      - name: set IMAGE VERSION
        run: echo ::set-env name=IMAGE_VERSION::$(echo "${{ matrix.images }}" | sed -e 's/debian\///g' -e 's/\//-/g')

      - name: Push to GitHub Packages
        uses: docker/build-push-action@v1
        with:
          dockefile: ./${{ matrix.images }}/Dockerfile
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}
          registry: docker.pkg.github.com
          repository: fagai/docker-php/${{ env.IMAGE_NAME }}
          tags: ${{ env.IMAGE_VERSION }}
          
  push-phalcon:
    needs: push
    strategy:
      matrix:
        images:
          - "7.2/alpine/phalcon-fpm"
          - "7.2/debian/phalcon-fpm"
          - "7.3/alpine/phalcon-fpm"
          - "7.3/debian/phalcon-fpm"
          - "7.4/alpine/phalcon-fpm"
          - "7.4/debian/phalcon4-fpm"

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - uses: satackey/action-docker-layer-caching@v0.0.8
        continue-on-error: true
        
      - name: set IMAGE VERSION
        run: echo ::set-env name=IMAGE_VERSION::$(echo "${{ matrix.images }}" | sed -e 's/debian\///g' -e 's/\//-/g')

      - name: Push to GitHub Packages
        uses: docker/build-push-action@v1
        with:
          dockefile: ./${{ matrix.images }}/Dockerfile
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}
          registry: docker.pkg.github.com
          repository: fagai/docker-php/${{ env.IMAGE_NAME }}
          tags: ${{ env.IMAGE_VERSION }}
