name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: php
  REGISTRY_URL: docker.pkg.github.com
jobs:

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    strategy:
      matrix:
        images:
          - "7.2/alpine/fpm"
          - "7.2/debian/fpm"
          - "7.3/alpine/fpm"
          - "7.3/debian/fpm"
          - "7.4/alpine/fpm"
          - "7.4/debian/fpm"

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - uses: satackey/action-docker-layer-caching@v0.0.8
        continue-on-error: true
        
      - name: Build image
        run: docker build . --file ./${{ matrix.images }}/Dockerfile --tag $IMAGE_NAME

      - name: Log into GitHub Container Registry
      # TODO: Create a PAT with `read:packages` and `write:packages` scopes and save it as an Actions secret `CR_PAT`
        run: echo "${{ secrets.CR_PAT }}" | docker login ${REGISTRY_URL} -u ${{ github.actor }} --password-stdin

      - name: Push image to GitHub Container Registry
        run: |
          IMAGE_ID=${REGISTRY_URL}/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          VERSION=$(echo "${{ matrix.images }}" | sed -e 's/debian\///g' -e 's/\//-/g')

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          
  push-phalcon:
    needs: push
    strategy:
      matrix:
        images:
          - "7.2/alpine/phalcon-fpm"
          - "7.2/debian/phalcon-fpm"
          - "7.3/alpine/phalcon-fpm"
          - "7.3/debian/phalcon-fpm"
          - "7.4/alpine/phalcon-fpm"
          - "7.4/debian/phalcon4-fpm"

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - uses: satackey/action-docker-layer-caching@v0.0.8
        continue-on-error: true
        
      - name: Build image
        run: docker build . --file ./${{ matrix.images }}/Dockerfile --tag $IMAGE_NAME

      - name: Log into GitHub Container Registry
      # TODO: Create a PAT with `read:packages` and `write:packages` scopes and save it as an Actions secret `CR_PAT`
        run: echo "${{ secrets.CR_PAT }}" | docker login ${REGISTRY_URL} -u ${{ github.actor }} --password-stdin

      - name: Push image to GitHub Container Registry
        run: |
          IMAGE_ID=${REGISTRY_URL}/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          VERSION=$(echo "${{ matrix.images }}" | sed -e 's/debian\///g' -e 's/\//-/g')

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
